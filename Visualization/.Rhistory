df_T2G <- read_csv("df_T2G.csv")
View(df_T2G)
colnames(df_T2G) <- c("Rate", "Role", "timeStep", "expId", "Alpha", "K")
free_rider_candidate <- df_T2G[df_T2G$K != 0.75 & df_T2G$Alpha == 0.25,]
maxTimeStep = max(df_T2G$timeStep)
maxTimeStep
free_rider_candidate2 <- free_rider_candidate2[free_rider_candidate[
free_rider_candidate$timeStep == maxTimeStep,1] != 1,]
free_rider_candidate2 <- free_rider_candidate[free_rider_candidate[
free_rider_candidate$timeStep == maxTimeStep,1] != 1,]
free_rider_candidate2 <- free_rider_candidate[free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep,1] != 1,]
df_T2G[8,1]
df_T2G[8,1] == 1
free_rider_candidate$timeStep == maxTimeStep
find(free_rider_candidate$timeStep == maxTimeStep)
index(free_rider_candidate$timeStep == maxTimeStep)
index(df_T2G$timeStep == maxTimeStep)
df_T2G$timeStep == maxTimeStep
find(df_T2G$timeStep == maxTimeStep)
df_T2G$timeStep != maxTimeStep
free_rider_candidate2 <- free_rider_candidate[free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep,1] != 1,]
free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep,1]
free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep,1] != 1
free_rider_candidateID <- free_rider_candidate[free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep,1] != 1,expId]
free_rider_candidateID <- free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep & free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep,1] != 1,expId]
free_rider_candidate2 <- free_rider_candidate[free_rider_candidate$timeStep == maxTimeStep,]
free_rider_candidateID <- free_rider_candidate2[free_rider_candidate2$Rate != 1,]$expId
free_rider_candidateID
free_rider_candidate2[free_rider_candidate2$Rate != 1,]
free_rider_candidate_info <- free_rider_candidate2[free_rider_candidate2$Rate != 1,]
maxTimeStep = max(df_T2G$timeStep)
free_rider_candidate <- df_T2G[df_T2G$timeStep == maxTimeStep,]
free_rider_candidate_info <- free_rider_candidate[free_rider_candidate2$Rate != 1,]
maxTimeStep = max(df_T2G$timeStep)
free_rider_candidate <- df_T2G[df_T2G$timeStep == maxTimeStep,]
free_rider_candidate_info <- free_rider_candidate[free_rider_candidate$Rate != 1,]
free_rider_candidate_info
free_rider_candidate_info【1，】
free_rider_candidate_info[1,]
which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i] &
)
which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
i = 1;
which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
disp(free_rider_candidate_info[i,])
print(free_rider_candidate_info[i,])
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index[-5]
index
tail(index,5)
a = c(1, 2, 3)
b = c(0, 0, 0)
cbind(a,b)
rbind(a,b)
c = rbind(a,b)
c[,1] == 3
c[,1] == 0
sum(c[,1] == 0)
sum(c[,1] == 3)
maxTimeStep = max(df_T2G$timeStep)
free_rider_candidate <- df_T2G[df_T2G$timeStep == maxTimeStep,]
free_rider_candidate_info <- free_rider_candidate[free_rider_candidate$Rate != 1,]
index_all = c()
for (i in nrow(free_rider_candidate_info)) {
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index = tail(index, 5)
if (sum(index_all[,1] == index[1]) == 0) {
rbind(index_all, index)
}
}
indexall
index_all
index_all = c()
for (i in nrow(free_rider_candidate_info)) {
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index = tail(index, 5)
if (sum(index_all[,1] == index[1]) == 0) {
index_all = rbind(index_all, index)
}
}
index_all
nrow(free_rider_candidate_info)
i = 1
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index = tail(index, 5)
index
(sum(index_all[,1] == index[1]) == 0)
index_all = rbind(index_all, index)
index_all
i = 2
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index = tail(index, 5)
if (sum(index_all[,1] == index[1]) == 0) {
index_all = rbind(index_all, index)
}
index_all
index_all = c()
for (i in nrow(free_rider_candidate_info)) {
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index = tail(index, 5)
if (sum(index_all[,1] == index[1]) == 0) {
index_all = rbind(index_all, index)
}
}
index_all
for (i in nrow(free_rider_candidate_info)) {
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index = tail(index, 5)
if (sum(index_all[,1] == index[1]) == 0) {
index_all = rbind(index_all, index)
}
}
index_all
for (i in 1:nrow(free_rider_candidate_info)) {
index = which(df_T2G$Role == free_rider_candidate_info$Role[i] &
df_T2G$expId == free_rider_candidate_info$expId[i] &
df_T2G$Alpha == free_rider_candidate_info$Alpha[i] &
df_T2G$K == free_rider_candidate_info$K[i]
)
index = tail(index, 5)
if (sum(index_all[,1] == index[1]) == 0) {
index_all = rbind(index_all, index)
}
}
index_all
for (i in 1:nrow(free_rider_candidate_info)) {
print(free_rider_candidate_info[i,])
print(df_T2G[index_all[i]], )
}
for (i in 1:nrow(free_rider_candidate_info)) {
print(free_rider_candidate_info[i,])
print(df_T2G[index_all[i,]], )
}
for (i in 1:nrow(free_rider_candidate_info)) {
print(free_rider_candidate_info[i,])
print(df_T2G[index_all[i,],])
}
adj_exp_t1 <- data.frame(matrix(0, nrow = length(exp_series) * n, ncol = ncol(adj_df)))
terminationTime = nrow(adj)/(100*20) # 51
repeatTime = 20
# When reaching the stable state, adj fixed;
# Idea: Compare the initial distribution (t=1) with the final distribution
#       Order the degree of each type decrementally, and get the average of exps
#       Write the organized data in a CSV and visualize it
# ----- data praperation -----
t_series = seq(1, terminationTime, by = 1)
exp_series = seq(1, repeatTime, by = 1)
# Convert adj to a dataframe if it's not already one
adj_df <- as.data.frame(adj)
# Initialize adj_exp_t1 as a dataframe with the correct dimensions
adj_exp_t1 <- data.frame(matrix(0, nrow = length(exp_series) * n, ncol = ncol(adj_df)))
n = 100
t_series = seq(1, terminationTime, by = 1)
exp_series = seq(1, repeatTime, by = 1)
# Convert adj to a dataframe if it's not already one
adj_df <- as.data.frame(adj)
# Initialize adj_exp_t1 as a dataframe with the correct dimensions
adj_exp_t1 <- data.frame(matrix(0, nrow = length(exp_series) * n, ncol = ncol(adj_df)))
adj_exp_T <- data.frame(matrix(0, nrow = length(exp_series) * n, ncol = ncol(adj_df)))
# get the adj_matrix of t=1 over the exps
for (exp in exp_series) {
adj_start = (exp-1)*terminationTime*n
adj_exp_t1[(n*(exp-1)+1):(n*exp),] = adj_matrix[(adj_start+1):(adj_start+n),]
}
t_series = seq(1, terminationTime, by = 1)
exp_series = seq(1, repeatTime, by = 1)
# Convert adj to a dataframe if it's not already one
adj_df <- as.data.frame(adj)
# Initialize adj_exp_t1 as a dataframe with the correct dimensions
adj_exp_t1 <- data.frame(matrix(0, nrow = length(exp_series) * n, ncol = ncol(adj_df)))
adj_exp_T <- data.frame(matrix(0, nrow = length(exp_series) * n, ncol = ncol(adj_df)))
# get the adj_matrix of t=1 over the exps
for (exp in exp_series) {
adj_start = (exp-1)*terminationTime*n
adj_exp_t1[(n*(exp-1)+1):(n*exp),] = adj_df[(adj_start+1):(adj_start+n),]
}
# get the adj_matrix of t=terminationTime over the exps
for (exp in exp_series) {
adj_end = exp*terminationTime*n
adj_exp_T[(n*(exp-1)+1):(n*exp),] = adj_df[(adj_end-n+1):adj_end,]
}
# Order the degree of each type decrementally, and get the average of exps
exp_id = rep(c(1:repeatTime), each = n)
agent_id = rep(c(1:n), times = repeatTime)
role = rep(c("Supplier", "Manufacturer", "Retailer"), each = round(n/3))
role = c(role, rep(c("Retailer"), times = n-(round(n/3))*3))
role = rep(role, times = repeatTime)
degree_t1 = rowSums(adj_exp_t1)
degree_T = rowSums(adj_exp_T)
df_degree_t1 = data.frame(degree_t1, exp_id, role, agent_id)
df_degree_T = data.frame(degree_T, exp_id, role, agent_id)
View(df_degree_T)
View(df_degree_t1)
df_ordered_t1 <- df_degree_t1 %>%
group_by(exp_id, role) %>%
arrange(desc(degree_t1), .by_group = TRUE)
#---------- Load Packages ---------
# Install and load pacman if not already installed
if (!require("pacman")) install.packages("pacman")
# Use pacman to install and load the required packages
pacman::p_load(
data.table,
dplyr,
latex2exp,
ggplot2,
gridExtra,
readxl,
readr,
tidyr,
scales,
patchwork,
stringr,
forstringr
)
df_ordered_t1 <- df_degree_t1 %>%
group_by(exp_id, role) %>%
arrange(desc(degree_t1), .by_group = TRUE)
View(df_ordered_t1)
df_ordered_t1$order <- agent_id
df_ordered_t1 <- df_degree_t1 %>%
group_by(exp_id, role) %>%
arrange(desc(degree_t1), .by_group = TRUE) %>%
mutate(degree_order = row_number())
df_ordered_t1_ave <- df_ordered_t1 %>%
group_by(agent_id, degree_order) %>%
summarize(avg_ordered_degree = mean(degree_t1))
View(df_ordered_t1_ave)
df_ordered_t1_ave <- df_ordered_t1 %>%
group_by(role, degree_order) %>%
summarize(avg_ordered_degree = mean(degree_t1))
exp_id = rep(c(1:repeatTime), each = n)
# agent_id = rep(c(1:n), times = repeatTime)
role = rep(c("Supplier", "Manufacturer", "Retailer"), each = round(n/3))
role = c(role, rep(c("Retailer"), times = n-(round(n/3))*3))
role = rep(role, times = repeatTime)
degree_t1 = rowSums(adj_exp_t1)
degree_T = rowSums(adj_exp_T)
df_degree_t1 = data.frame(degree_t1, exp_id, role)
df_degree_T = data.frame(degree_T, exp_id, role)
df_ordered_t1 <- df_degree_t1 %>%
group_by(exp_id, role) %>%
arrange(desc(degree_t1), .by_group = TRUE) %>%
mutate(degree_order = row_number())
# Calculat the average degree of the repeated exp
df_ordered_t1_ave <- df_ordered_t1 %>%
group_by(role, degree_order) %>%
summarize(avg_ordered_degree = mean(degree_t1))
df_ordered_T <- df_degree_T %>%
group_by(exp_id, role) %>%
arrange(desc(degree_T), .by_group = TRUE) %>%
mutate(degree_order = row_number())
View(df_ordered_T)
df_ordered_T_ave <- df_ordered_T %>%
group_by(role, degree_order) %>%
summarize(avg_ordered_degree = mean(degree_T))
View(df_ordered_t1_ave)
View(df_ordered_T)
View(df_ordered_T_ave)
write.csv(df_ordered_t1_ave, "df_AdjAna_AveDegree_t1.csv")
write.csv(df_ordered_t1_ave, "df_AdjAna_AveDegree_t1.csv", row.names = FALSE)
write.csv(df_ordered_T_ave, "df_AdjAna_AveDegree_T.csv", row.names = FALSE)
df_ordered_t1_ave <- read.csv("df_AdjAna_AveDegree_t1.csv", header = TRUE)
df_ordered_T_ave <- read.csv("df_AdjAna_AveDegree_T.csv", header = TRUE)
mydf = df_ordered_t1_ave
mydf = df_ordered_t1_ave
View(mydf)
mydf$degree_bins <- cut(mydf$degrees,
breaks = seq(0, max(df$degrees, na.rm = TRUE), by = 2),
right = FALSE)
mydf$degree_bins <- cut(mydf$degrees,
breaks = seq(0, max(mydf$degrees, na.rm = TRUE), by = 2),
right = FALSE)
mydf$degree_bins <- cut(mydf$degrees,
breaks = seq(0,
max(mydf$avg_ordered_degree,
na.rm = TRUE),
by = 2),
right = FALSE)
mydf$degree_bins <- cut(mydf$avg_ordered_degree,
breaks = seq(0,
max(mydf$avg_ordered_degree),
by = 2),
right = FALSE)
mydf$degree_bins <- cut(mydf$avg_ordered_degree,
breaks = seq(0,
max(mydf$avg_ordered_degree, na.rm = TRUE),
by = 2),
right = FALSE)
mydf$degree_bins <- cut(mydf$avg_ordered_degree,
breaks = seq(0,
max(mydf$avg_ordered_degree),
by = 2),
right = TRUE)
mydf$degree_bins <- cut(mydf$avg_ordered_degree,
breaks = seq(0,
max(mydf$avg_ordered_degree)+1,
by = 2),
right = FALSE)
mydf$degree_bins <- cut(mydf$avg_ordered_degree,
breaks = seq(0,
max(mydf$avg_ordered_degree)+2,
by = 2),
right = FALSE)
# Summarize the data
degree_freq_df <- mydf %>%
group_by(degree_bins) %>%
summarise(frequency = n())
View(degree_freq_df)
degree_freq_df <- mydf %>%
group_by(degree_bins, role) %>%
summarise(frequency = n())
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer()
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
theme_minimal()
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer(set3)
# Create the bar plot
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer("set3")
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
theme_minimal()
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer("set3") +
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
theme_minimal()
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "set3") +
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
theme_minimal()
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "set3") +
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set3") +
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer() +
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set1") +
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
library(wesanderson)
install.packages("wesanderson")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, name="GrandBudapest"))
library(wesanderson)
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, name="GrandBudapest"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
library(wesanderson)
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, name="GrandBudapest"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity", position = "dodge") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency")
degree_freq_df <- degree_freq_df %>%
mutate(panel = ifelse(role == "manufacturer", "Panel 2", "Panel 1"))
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity", position = "dodge") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
facet_wrap(~ panel)
degree_freq_df <- degree_freq_df %>%
mutate(panel = ifelse(role == "Manufacturer", "Panel 2", "Panel 1"))
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity", position = "dodge") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
facet_wrap(~ panel)
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity", position = "dodge") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"),
name = "Role",
labels = c("Supplier", "Retailer", "Manufacrturer"))+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
facet_wrap(~ panel)
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity", position = "dodge") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"),
name = "Role")+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
facet_wrap(~ panel)
degree_freq_df$role <- factor(degree_freq_df$role,
levels = c("Supplier", "Retailer", "Manufacturer"))
library(wesanderson)
# Create the bar plot
ggplot(degree_freq_df, aes(x = degree_bins,
y = frequency,
fill = role)) +
geom_bar(stat = "identity", position = "dodge") +
# scale_fill_brewer(palette = "Set1") +
scale_fill_manual(values=wes_palette(n=3, "GrandBudapest1"),
name = "Role")+
labs(title = "Degree Distribution", x = "Degree Interval", y = "Frequency") +
facet_wrap(~ panel)
